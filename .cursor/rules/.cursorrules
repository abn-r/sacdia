# SACDIA Project Specific Rules

## Memory Bank Integration
- **MUST READ**: Before generating code, creating plans, or answering questions about the project, **ALWAYS** consult the entire contents of the `@memory-bank` folder. This includes:
    - `projectbrief.md`
    - `productContext.md`
    - `systemPatterns.md`
    - `techContext.md`
    - `activeContext.md`
    - `progress.md`
- **CHECK TASKS**: Before executing actions related to a specific module or feature, **ALWAYS** review the corresponding `task-*.md` files within `memory-bank/tasks/`. Use this information to understand pending work and avoid redoing tasks already completed or addressed.
- Base all decisions, plans, and code generation on the information documented in the memory bank.
- If the memory bank seems outdated or conflicting with the request, highlight the discrepancy and suggest updating the memory bank first.

## Rule Adherence
- **ALWAYS** adhere to all rules defined within this `.cursorrules` file and any other active rules provided (like the general Flutter/Dart guidelines already included).
- Prioritize these project-specific rules if they conflict with more general instructions.

## Language
- **ALWAYS** respond and communicate in **Spanish**, as previously established.

## State Management Clarification (Based on User Input)
- Use **Bloc** for existing features.
- Use **Cubit** for new features and modules.

## Dependency Injection Clarification (Based on User Input)
- The project aims to use **get_it**.
- When creating new features or refactoring, implement dependency injection using `get_it` for Repositories, Services, Blocs, and Cubits. Follow standard `get_it` patterns (Singletons, Factories, Lazy Singletons as appropriate).
